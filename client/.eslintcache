[{"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/index.js":"1","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/App.js":"2","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/reportWebVitals.js":"3","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/RootContainer.js":"4","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/GlobalState.js":"5","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/actions.js":"6","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/API.js":"7","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/routes/PrivateRoutes.js":"8","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/routes/PublicRoutes.js":"9","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Dashboard/index.js":"10","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Donate/index.js":"11","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Volunteer/index.js":"12","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Signup/index.js":"13","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/HomePage/index.js":"14","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Login/index.js":"15","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/History/index.js":"16","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Favorites/index.js":"17","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/NavTabs.js":"18","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Header/index.js":"19","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Footer/index.js":"20","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Select/index.js":"21","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/DonateForm/index.js":"22","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Table/index.js":"23","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/FooterSmall/index.js":"24","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/VolunteerForm/index.js":"25","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/SignupForm/index.js":"26","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/LoginForm/index.js":"27","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/VolunteerHistory/index.js":"28","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/DonationHistory/index.js":"29","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/FavoritesTable/index.js":"30"},{"size":835,"mtime":1607133645635,"results":"31","hashOfConfig":"32"},{"size":249,"mtime":1607186471525,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1606950982328,"results":"34","hashOfConfig":"32"},{"size":942,"mtime":1607186005491,"results":"35","hashOfConfig":"32"},{"size":747,"mtime":1607185447048,"results":"36","hashOfConfig":"32"},{"size":62,"mtime":1607185447048,"results":"37","hashOfConfig":"32"},{"size":1093,"mtime":1607796476885,"results":"38","hashOfConfig":"32"},{"size":1028,"mtime":1607560379347,"results":"39","hashOfConfig":"32"},{"size":656,"mtime":1607560379347,"results":"40","hashOfConfig":"32"},{"size":1034,"mtime":1607786264991,"results":"41","hashOfConfig":"32"},{"size":381,"mtime":1607786264991,"results":"42","hashOfConfig":"32"},{"size":396,"mtime":1607786264993,"results":"43","hashOfConfig":"32"},{"size":593,"mtime":1607958226413,"results":"44","hashOfConfig":"32"},{"size":901,"mtime":1607826118901,"results":"45","hashOfConfig":"32"},{"size":849,"mtime":1607826118901,"results":"46","hashOfConfig":"32"},{"size":761,"mtime":1607786264992,"results":"47","hashOfConfig":"32"},{"size":606,"mtime":1607786264992,"results":"48","hashOfConfig":"32"},{"size":967,"mtime":1607786264989,"results":"49","hashOfConfig":"32"},{"size":806,"mtime":1607786264989,"results":"50","hashOfConfig":"32"},{"size":2048,"mtime":1607786264987,"results":"51","hashOfConfig":"32"},{"size":2309,"mtime":1607786264990,"results":"52","hashOfConfig":"32"},{"size":4495,"mtime":1607958226411,"results":"53","hashOfConfig":"32"},{"size":4323,"mtime":1607958226413,"results":"54","hashOfConfig":"32"},{"size":394,"mtime":1607786264989,"results":"55","hashOfConfig":"32"},{"size":5367,"mtime":1607958226413,"results":"56","hashOfConfig":"32"},{"size":9106,"mtime":1607958226412,"results":"57","hashOfConfig":"32"},{"size":2330,"mtime":1607958226412,"results":"58","hashOfConfig":"32"},{"size":1667,"mtime":1607786264991,"results":"59","hashOfConfig":"32"},{"size":1833,"mtime":1607786264987,"results":"60","hashOfConfig":"32"},{"size":3904,"mtime":1607958226411,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12lrdk9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/index.js",[],["141","142"],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/App.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/reportWebVitals.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/RootContainer.js",["143"],"import React,{useEffect, useState} from 'react'; \nimport {useStoreContext} from './utils/GlobalState';\nimport PublicRoutes from './routes/PublicRoutes';\nimport PrivateRoutes from './routes/PrivateRoutes';\nimport API from './utils/API';\nimport {LOG_IN} from './utils/actions';\n\n\nconst RootContainer=()=>{\n    const [state,dispatch]=useStoreContext();\n\n    const [loading,setLoading]=useState(true);\n\n    useEffect(()=>{\n        API.verifyAuthentication().then(response=>{\n            dispatch({\n                type:LOG_IN,\n                payload:response.data\n            });\n            setLoading(false);\n        },error=>{\n            setLoading(false);\n        }).catch(error=>{\n            setLoading(false);\n        });\n    },[])\n    if(loading) {\n        return <div>Loading...</div>\n    } else if(state.account) {\n        return <PrivateRoutes />;\n    } else {\n        return <PublicRoutes />;\n    }\n\n}\n\nexport default RootContainer;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/GlobalState.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/actions.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/utils/API.js",["144"],"import axios from \"axios\";\n\nexport default {\n  logIn:function(email,password) {\n    return axios.post(\"/api/auth/login\",{email,password});\n  },\n  verifyAuthentication:function() {\n    return axios.get(\"/api/auth/login\",{\n      headers: {\n        Authorization:localStorage.getItem(\"authorization-token\")\n      }\n    })\n  },\n\n  signUp : function(userData) {\n    return axios.post(\"/api/account\", userData);\n  },\n\n  getNonProfits: function() {\n    return axios.get(\"/api/nonProfits\");\n  },\n\n  addFavorite: function(id) {\n    return axios.post(`/api/nonProfits/${id}`);\n  },\n\n  removeFavorite: function(id) {\n    return axios.delete(`/api/nonProfits/${id}`);\n  },\n\n  getFavorites: function() {\n    return axios.get(\"/api/account\");\n  }, \n  \n  saveTransaction: function(donationData) {\n    return axios.post(\"/api/transaction\", donationData);\n  },\n\n  getTransactions: function() {\n    return axios.get(\"/api/transaction\");\n  },\n\n  saveTime: function(volunteerData) {\n    return axios.post(\"/api/time\", volunteerData);\n  }, \n\n  getTimes: function() {\n    return axios.get(\"/api/time\");\n  },\n  \n};\n\n","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/routes/PrivateRoutes.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/routes/PublicRoutes.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Dashboard/index.js",["145"],"import React, { useState } from 'react';\n\nimport Header from \"../../components/Header\";\nimport NavTabs from \"../../components/NavTabs\";\nimport Select from \"../../components/Select\";\nimport Footer from \"../../components/Footer\";\nimport Table from \"../../components/Table\";\n\nimport \"../../pages/style.css\";\n\nconst Dashboard = () => {\n\n    // Setting our component's initial state\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n\n    return <div>\n\n        <NavTabs />\n        <br></br>\n\n        <h1 id=\"dashtitle\"><u>Welcome to Donate Miami!</u></h1>\n        \n        <h4 id=\"dashparagraph\"> Your site for supporting your favorite non-profit organizations in</h4>\n        <h4 id=\"dashparagraph\">Miami-Dade County!</h4>\n\n        <h1 style={{ color: \"#eb008b\", textAlign: \"center\" }} id=\"heart\">&hearts;</h1>\n\n        <Select setSelectedCategory={setSelectedCategory} />\n        <br></br>\n\n        <Table selectedCategory={selectedCategory} />\n        <br></br>\n\n        <Footer />\n    </div>\n}\nexport default Dashboard;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Donate/index.js",["146"],"import React from 'react';\n\nimport Header from \"../../components/Header\";\nimport NavTabs from \"../../components/NavTabs\";\nimport Footer from \"../../components/Footer\";\nimport DonateForm from '../../components/DonateForm';\n\nconst Donate = () => {\n    return <div>\n\n        <NavTabs />\n        <br></br>\n\n        <DonateForm />\n\n        <Footer />\n    </div>\n}\nexport default Donate;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Volunteer/index.js",["147"],"import React from 'react';\n\nimport Header from \"../../components/Header\";\nimport NavTabs from \"../../components/NavTabs\";\nimport Footer from \"../../components/Footer\";\nimport VolunteerForm from '../../components/VolunteerForm';\n\nconst Volunteer = () => {\n    return <div>\n\n        <NavTabs />\n        <br></br>\n\n        <VolunteerForm />\n\n        <Footer />\n    </div>\n}\nexport default Volunteer;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Signup/index.js",["148","149"],"import React from 'react';\nimport Header from \"../../components/Header\";\nimport { Link } from 'react-router-dom';\n\nimport SignupForm from '../../components/SignupForm';\n\nimport { useStoreContext } from '../../utils/GlobalState';\n// import { LOG_IN } from '../../utils/actions';\n// import FooterSmall from '../../components/FooterSmall';\n\nconst SignupPage = () => {\n    const [state, dispatch] = useStoreContext();\n    return <div>\n        <Header />\n\n        <p id=\"signuppage\">Return to <Link to=\"/login\">Login Page</Link></p>\n\n        <SignupForm />\n\n    </div>\n\n}\nexport default SignupPage;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/HomePage/index.js",["150"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport FooterSmall from '../../components/FooterSmall';\n\nconst HomePage = () => {\n    return <div>\n\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        }}>\n            <Header />\n        </div>\n\n\n        <p id=\"homepage\">\n            <button id=\"homebutton\"><Link to=\"/login\" style={{color: 'white'}}> Login </Link></button>\n            <button id=\"homebutton\"><Link to=\"/signup\" style={{color: 'white'}}> Sign up </Link></button>\n        </p>\n\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        }}>\n            <FooterSmall />\n        </div>\n\n    </div>\n}\nexport default HomePage;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Login/index.js",["151"],"import React from 'react';\nimport Header from \"../../components/Header\";\nimport LoginForm from '../../components/LoginForm';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { LOG_IN } from '../../utils/actions';\nimport FooterSmall from '../../components/FooterSmall';\n\n\n\nconst LoginPage = () => {\n    const [state, dispatch] = useStoreContext();\n    return <div>\n        <Header />\n\n        <LoginForm onLogIn={(account) => {\n            localStorage.setItem(\"authorization-token\", account.token);\n            dispatch({\n                type: LOG_IN,\n                payload: account\n            })\n        }} />\n\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        }}>\n            <FooterSmall />\n        </div>\n\n    </div>\n}\nexport default LoginPage;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/History/index.js",["152"],"import React from 'react';\n\nimport Header from \"../../components/Header\";\nimport NavTabs from \"../../components/NavTabs\";\nimport Footer from \"../../components/Footer\";\nimport VolunteerHistory from \"../../components/VolunteerHistory\";\nimport DonationHistory from \"../../components/DonationHistory\";\n\nfunction History(props) {\n\n  return (\n    <div>\n\n      <NavTabs />\n      <br></br>\n\n      <h2 id=\"histitle\">Giving History</h2>\n\n      <p id=\"hispage\">\n        Here is your donation and volunteer history.\n      </p>\n\n      <h3 id=\"donhistory\">Donation History</h3>\n      <DonationHistory />\n      <br></br>\n\n      <h3 id=\"volhistory\">Volunteer History</h3>\n      <VolunteerHistory />\n      <br></br>\n\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default History;\n","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/containers/Favorites/index.js",["153"],"import React from \"react\";\n\nimport Header from \"../../components/Header\";\nimport NavTabs from \"../../components/NavTabs\";\nimport Footer from \"../../components/Footer\";\nimport FavoritesTable from \"../../components/FavoritesTable\";\n\nfunction Favorites() {\n  return (\n    <div>\n\n      <NavTabs />\n      <br></br>\n\n      <h2 id=\"favtitle\"> Favorites </h2>\n\n      <p id=\"favpage\">\n        Here is a list of your selected favorite organizations.  You can manage your favorites, donate money, or volunteer time.\n      </p>\n\n      <FavoritesTable />\n\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default Favorites;\n","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/NavTabs.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Header/index.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Footer/index.js",["154","155","156","157","158","159","160","161"],"import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\nimport './style.css';\n// bootstrap\nconst Footer = () => {\n  return (\n    <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\" className=\"footer\" id=\"color\">\n      <MDBContainer fluid className=\"text-center text-md-left\" className=\"color\">\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Thank you!</h5>\n            <p>\n              We hope that Donate Miami has helped you choose how you would like to support our local communities. &hearts;\n            </p>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <h5 className=\"title\">Links: Check us out!</h5>\n            <ul>\n              <li className=\"list-unstyled\">\n                {/* thumbnail pic */}\n                <img className=\"pic\" src=\"https://avatars3.githubusercontent.com/u/66966245?s=460&u=38e65183f23e0f4f57620605f54815a9abecd387&v=4\"></img><a href=\"https://github.com/caseofbase18\" target=\"_blank\">Casey's GitHub</a>\n              </li>\n\n              <li className=\"list-unstyled\">\n                {/* thumbnail pic */}\n                <img className=\"pic\" src=\"https://avatars0.githubusercontent.com/u/62854999?s=460&u=5438391f4f5c08fd2bb539712c486ac762a40e90&v=4\"></img><a href=\"https://github.com/LisaMcGautier\" target=\"_blank\">Lisa's GitHub</a>\n              </li>\n\n              <li className=\"list-unstyled\">\n                {/* thumbnail pic */}\n                <img className=\"pic\" src=\"https://avatars0.githubusercontent.com/u/66213149?s=460&u=d9b22d03b6f739c3d92d28fd80b467a3176d8777&v=4\"></img><a href=\"https://github.com/jrgsepulveda\" target=\"_blank\">Jorge's GitHub</a>\n              </li>\n            </ul>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"#!\"> donatemiami.com </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default Footer;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Select/index.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/DonateForm/index.js",["162","163","164"],"import React, { useState, useEffect } from 'react';\nimport API from \"../../utils/API\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst DonateForm = () => {\n\n    // Setting our component's initial state\n    const [nonProfits, setNonProfits] = useState([]);\n    const [organizationId, setOrganizationId] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [selectedOrganization, setSelectedOrganization] = useState(\"\");\n\n    // When component mounts, load non Profits from db\n    useEffect(() => {\n        loadNonProfits();\n        // checkOrganization();\n    }, []);\n\n    // Loads all nonProfits and sets them to nonProfits\n    function loadNonProfits() {\n        console.log(\"Loading Nonprofits...\");\n        API.getNonProfits()\n            .then(res => {\n                setNonProfits(res.data)\n                checkOrganization(res.data)\n                // setOriginalNonProfits(res.data)\n                // console.log(props.selectedCategory, res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    function checkOrganization(organizations) {\n\n        // console.log(window.location.href);\n        console.log(\"Checking Organization with... \" + organizations.length + \" # of organizations\");\n\n        let url = window.location.href;\n\n        if (url.includes(\"?npid=\")) {\n            const selectedOrganizationID = url.slice(url.indexOf(\"?npid=\") + \"?npid=\".length);\n            const selectedOrganizationData = organizations.filter((nonProfit) => {\n                return selectedOrganizationID === nonProfit._id;\n            });\n\n            setOrganizationId(selectedOrganizationData[0]._id);\n            setSelectedOrganization(selectedOrganizationData[0]);\n            console.log(selectedOrganizationData);\n        }\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (!organizationId || organizationId == \"Select organization...\") {\n            toast(\"Please select an organization\")\n        } else if (!amount) {\n            toast(\"Please enter a dollar amount\")\n        } else {\n\n            const finalOrganization = nonProfits.filter((nonProfit) => {\n                return organizationId === nonProfit._id;\n            });\n\n            API.saveTransaction({\n                name: finalOrganization[0].name,\n                value: amount\n            })\n                .then(res => console.log(res.data))\n                .catch(err => console.log(err));\n\n            console.log(finalOrganization);\n            toast(\"Thank you for your donation of $\" + amount + \" to \" + finalOrganization[0].name + \"!\")\n            \n        }\n    };\n\n    return (\n\n        <div>\n\n            <h2 id=\"donatetitle\">Donation Form</h2>\n\n            <p id=\"selectdonate\">Select an organization and fill in the amount of your financial contribution.</p>\n\n            <form>\n\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputOrganization\">Organization</label>\n                        <select id=\"inputOrganization\" name=\"organization\" className=\"form-control\"\n                            onChange={(event) => setOrganizationId(event.target.value)}>\n                            <option>Select organization...</option>\n\n                            {nonProfits.map((nonProfit) => {\n                                return (\n\n                                    <option selected={selectedOrganization.name == nonProfit.name ? 'selected' : null}\n                                        key={nonProfit._id} value={nonProfit._id}>{nonProfit.name}</option>\n\n                                )\n                            })})\n\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputAmountDollars\">Amount</label>\n                        <input type=\"text\" name=\"amount\" className=\"form-control\" id=\"inputAmountDollars\" placeholder=\"$0.00\"\n                            value={amount}\n                            onChange={(event) => setAmount(event.target.value)}></input>\n                    </div>\n                </div>\n\n                <button onClick={handleSubmit} className=\"btn btn-success shadow\" id=\"donbutton\">Submit Donation!</button>\n\n            </form>\n\n            <br></br>\n\n            <ToastContainer />\n        </div>\n    )\n}\n\nexport default DonateForm;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/Table/index.js",["165"],"import React, { useState, useEffect } from 'react';\nimport \"../../pages/style.css\";\nimport API from \"../../utils/API\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Table(props) {\n\n  // Setting our component's initial state\n  const [nonProfits, setNonProfits] = useState([]);\n  const [originalNonProfits, setOriginalNonProfits] = useState([]);\n\n  // When component mounts, load non Profits from db\n  useEffect(() => {\n    loadNonProfits()\n  }, [])\n\n  // When category selected, load non Profits from db\n\n  useEffect(() => {\n    // console.log(props.selectedCategory)\n    if (props.selectedCategory !== \"Select category...\") {\n      const nonProfitClone = originalNonProfits.filter((nonProfit) => {\n        return props.selectedCategory === nonProfit.category\n      })\n      setNonProfits(nonProfitClone)\n    } else {\n      setNonProfits(originalNonProfits)\n    }\n  }, [props.selectedCategory])\n\n  // Loads all nonProfits and sets them to nonProfits\n  function loadNonProfits() {\n    API.getNonProfits()\n      .then(res => {\n        setNonProfits(res.data)\n        setOriginalNonProfits(res.data)\n        // console.log(props.selectedCategory, res.data)\n      })\n      .catch(err => console.log(err));\n  };\n\n  // 1. When the favorites button is clicked, get the id of the nonProfit \n  // and add the nonProfit to the list of favorites\n\n  function newFavorite(id) {\n    // console.log(id);\n    API.addFavorite(id)\n      .then(res =>\n        console.log(res.data)\n      )\n      .catch(err => console.log(err));\n\n    toast(\"Added to favorites!\");\n  }\n\n  return (\n    <div>\n      <table className=\"table table-hover \">\n\n        <tbody className=\"container\">\n          {\n            nonProfits.map((nonProfit) => {\n              return (\n\n                <tr key={nonProfit._id}>\n                  <td>\n                    <div className=\"row\">\n                      <div className=\"col-md-4 col-sm-12\">\n                        <div className=\"row\">\n                          <div className=\"col-12\"><img src={nonProfit.imageURL} alt={nonProfit.name} id=\"logo\" style={{ height: 150, width: 150, marginLeft: 70 }} /></div>\n                        </div>\n                      </div>\n                      <div className=\"col-md-8 col-sm-12\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <h2>{nonProfit.name}</h2>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-12\" id=\"parafont\">\n                            {nonProfit.mission}\n                          &nbsp;&nbsp;<a className=\"externalLink\" href={nonProfit.contact.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit website</a>\n                            <br></br>\n                            <button type=\"button\" className=\"btn btn-warning customBtn shadow\" id=\"favbutton\"\n                              onClick={(event) => {\n                                event.preventDefault();\n                                newFavorite(nonProfit._id);\n                              }}><span className=\"fa fa-heart\"></span>&nbsp;&nbsp;&nbsp;Add To Favorites</button>\n\n                            {/* <span><a className=\"btn btn-success customBtn shadow\" href={'/donate?npid=' + nonProfit._id} rel=\"noopener noreferrer\" id=\"favbutton\">FAVORITE</a></span> */}\n\n                            <span><a className=\"btn btn-success customBtn shadow\" href={'/donate?npid=' + nonProfit._id} rel=\"noopener noreferrer\"\n                              id=\"donbutton\"><span className=\"fa fa-donate\"></span>&nbsp;&nbsp;&nbsp;Donate money</a></span>\n\n                            <span><a className=\"btn btn-primary customBtn shadow\" href={'/volunteer?npid=' + nonProfit._id} rel=\"noopener noreferrer\"\n                              id=\"volbutton\"><span className=\"fa fa-clock\"></span>&nbsp;&nbsp;&nbsp;Volunteer time</a></span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              )\n            })\n          }\n\n        </tbody>\n\n      </table>\n\n      <ToastContainer />      \n    </div>\n  )\n}\n\nexport default Table;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/FooterSmall/index.js",[],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/VolunteerForm/index.js",["166","167","168"],"import React, { useState, useEffect } from 'react';\nimport API from \"../../utils/API\";\n\nimport Calendar from 'react-calendar';\nimport moment from \"moment\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst VolunteerForm = () => {\n\n    // Setting our component's initial state\n    const [nonProfits, setNonProfits] = useState([]);\n    const [organizationId, setOrganizationId] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [selectedOrganization, setSelectedOrganization] = useState(\"\");\n    const [date, onChange] = useState(new Date());\n\n    // When component mounts, load non Profits from db\n    useEffect(() => {\n        loadNonProfits();\n        // checkOrganization();\n    }, []);\n\n    // Loads all nonProfits and sets them to nonProfits\n    function loadNonProfits() {\n        console.log(\"Loading Nonprofits...\");\n        API.getNonProfits()\n            .then(res => {\n                setNonProfits(res.data)\n                checkOrganization(res.data)\n                // setOriginalNonProfits(res.data)\n                // console.log(props.selectedCategory, res.data)\n            })\n            .catch(err => console.log(err));\n    };\n\n    function checkOrganization(organizations) {\n\n        // console.log(window.location.href);\n        console.log(\"Checking Organization with... \" + organizations.length + \" # of organizations\");\n\n        let url = window.location.href;\n\n        if (url.includes(\"?npid=\")) {\n            const selectedOrganizationID = url.slice(url.indexOf(\"?npid=\") + \"?npid=\".length);\n            const selectedOrganizationData = organizations.filter((nonProfit) => {\n                return selectedOrganizationID === nonProfit._id;\n            });\n\n            setOrganizationId(selectedOrganizationData[0]._id);\n            setSelectedOrganization(selectedOrganizationData[0]);\n            console.log(selectedOrganizationData);\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        // console.log(organization, amount, date);\n        if (!organizationId || organizationId == \"Select organization...\") {\n            toast(\"Please select an organization\")\n        } else if (!amount) {\n            toast(\"Please enter the number of hours\")\n            // } else if (!date) {\n            //     toast(\"Please select a date in the future\")\n            // \n        } else {\n\n            const finalOrganization = nonProfits.filter((nonProfit) => {\n                return organizationId === nonProfit._id;\n            });\n\n            API.saveTime({\n                name: finalOrganization[0].name,\n                value: amount,\n                date: date\n            })\n                .then(res => console.log(res.data))\n                .catch(err => console.log(err));\n\n            toast(\"Thank you for your interest in \" + finalOrganization[0].name + \"! We will be in touch soon to coordinate the details of your volunteer service.\");\n        }\n    };\n\n    return (\n\n        <div>\n\n            <h2 id=\"volform\">Volunteer Form</h2>\n            <p id=\"volparagraph\">Select an organization, how many hours you would like to contribute, and the date of your availability.</p>\n\n            <form>\n\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputOrganization\">Organization</label>\n                        <select id=\"inputOrganization\" name=\"organization\" className=\"form-control\"\n                            onChange={(event) => setOrganizationId(event.target.value)}>\n                            <option>Select organization...</option>\n\n                            {nonProfits.map((nonProfit) => {\n                                return (\n\n                                    <option selected={selectedOrganization.name == nonProfit.name ? 'selected' : null}\n                                        key={nonProfit._id} value={nonProfit._id}>{nonProfit.name}</option>\n\n                                )\n                            })})\n\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputHoursAvailable\">Amount of Hours Available</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputHoursAvailable\" placeholder=\"e.g. 3 hours\"\n                            value={amount}\n                            onChange={(event) => setAmount(event.target.value)}></input>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"form-group col-md-6\" id=\"calendar\">\n\n                            <br></br>\n\n                            <Calendar\n                                onChange={onChange}\n                                value={date}\n                                minDate={moment().toDate()}\n                                calendarType={\"US\"}\n                            />\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <button onClick={handleSubmit} className=\"btn btn-primary shadow\" id=\"volbutton\">Submit Volunteer Availability!</button>\n\n            </form>\n            <br></br>\n\n            <ToastContainer />\n        </div>\n    )\n}\n\nexport default VolunteerForm;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/SignupForm/index.js",["169"],"import React, { useState } from 'react';\nimport API from '../../utils/API';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useHistory } from 'react-router-dom';\n\nfunction Signup(props) {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first, setFirst] = useState(\"\");\n    const [last, setLast] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [stateInitials, setStateInitials] = useState(\"\");\n    const [zip, setZip] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n\n    const history = useHistory();\n\n    // function handleInputChange(event) {\n    //     const { name, value } = event.target;\n    //     console.log(name, value);\n    // };\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        // console.log(email, password, first, last, address, city, stateInitials, zip, phone);\n        API.signUp({\n            email: email,\n            password: password,\n            firstName: first,\n            lastName: last,\n            address: address,\n            city: city,\n            state: stateInitials,\n            zip: zip,\n            phone: phone\n        })\n            .then(res => console.log(res.data))\n            .catch(err => console.log(err));\n\n        // toast(\"New account created successfully!\");\n\n        // this line will take the new user to the login page \n        history.push('/login?newaccount=true');\n    };\n\n    return (\n\n        <div>\n            <form>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label htmlFor=\"inputEmail4\">Email</label>\n                        <input type=\"email\" name=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"email@address.com\"\n                            value={email}\n                            onChange={(event) => setEmail(event.target.value)}></input>\n                    </div>\n\n                    <div className=\"form-group col-md-6\">\n                        <label htmlFor=\"inputPassword4\">Password</label>\n                        <input type=\"password\" name=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"New password\"\n                            value={password}\n                            onChange={(event) => setPassword(event.target.value)}></input>\n                    </div>\n                </div>\n\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label htmlFor=\"inputFirstName\">First Name</label>\n                        <input type=\"text\" name=\"first\" className=\"form-control\" placeholder=\"First Name\"\n                            value={first}\n                            onChange={(event) => setFirst(event.target.value)}></input>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label htmlFor=\"inputLastName\">Last Name</label>\n                        <input type=\"text\" name=\"last\" className=\"form-control\" placeholder=\"Last Name\"\n                            value={last}\n                            onChange={(event) => setLast(event.target.value)}></input>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"inputAddress\">Address</label>\n                    <input type=\"text\" name=\"address\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St Apt. B\"\n                        value={address}\n                        onChange={(event) => setAddress(event.target.value)}></input>\n                </div>\n\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                        <label htmlFor=\"inputCity\">City</label>\n                        <input type=\"text\" name=\"city\" className=\"form-control\" id=\"inputCity\" placeholder=\"City\"\n                            value={city}\n                            onChange={(event) => setCity(event.target.value)}></input>\n                    </div>\n\n                    <div className=\"form-group col-md-4\">\n                        <label htmlFor=\"inputState\">State</label>\n                        <select id=\"inputState\" name=\"stateInitials\" className=\"form-control\"\n\n\n                            onChange={(event) => setStateInitials(event.target.value)}>\n                            <option defaultValue>Choose...</option>\n                            {/* <option value=\"\" selected=\"selected\">Select a State</option> */}\n                            <option value=\"AL\">Alabama</option>\n                            <option value=\"AK\">Alaska</option>\n                            <option value=\"AZ\">Arizona</option>\n                            <option value=\"AR\">Arkansas</option>\n                            <option value=\"CA\">California</option>\n                            <option value=\"CO\">Colorado</option>\n                            <option value=\"CT\">Connecticut</option>\n                            <option value=\"DE\">Delaware</option>\n                            <option value=\"DC\">District Of Columbia</option>\n                            <option value=\"FL\">Florida</option>\n                            <option value=\"GA\">Georgia</option>\n                            <option value=\"HI\">Hawaii</option>\n                            <option value=\"ID\">Idaho</option>\n                            <option value=\"IL\">Illinois</option>\n                            <option value=\"IN\">Indiana</option>\n                            <option value=\"IA\">Iowa</option>\n                            <option value=\"KS\">Kansas</option>\n                            <option value=\"KY\">Kentucky</option>\n                            <option value=\"LA\">Louisiana</option>\n                            <option value=\"ME\">Maine</option>\n                            <option value=\"MD\">Maryland</option>\n                            <option value=\"MA\">Massachusetts</option>\n                            <option value=\"MI\">Michigan</option>\n                            <option value=\"MN\">Minnesota</option>\n                            <option value=\"MS\">Mississippi</option>\n                            <option value=\"MO\">Missouri</option>\n                            <option value=\"MT\">Montana</option>\n                            <option value=\"NE\">Nebraska</option>\n                            <option value=\"NV\">Nevada</option>\n                            <option value=\"NH\">New Hampshire</option>\n                            <option value=\"NJ\">New Jersey</option>\n                            <option value=\"NM\">New Mexico</option>\n                            <option value=\"NY\">New York</option>\n                            <option value=\"NC\">North Carolina</option>\n                            <option value=\"ND\">North Dakota</option>\n                            <option value=\"OH\">Ohio</option>\n                            <option value=\"OK\">Oklahoma</option>\n                            <option value=\"OR\">Oregon</option>\n                            <option value=\"PA\">Pennsylvania</option>\n                            <option value=\"RI\">Rhode Island</option>\n                            <option value=\"SC\">South Carolina</option>\n                            <option value=\"SD\">South Dakota</option>\n                            <option value=\"TN\">Tennessee</option>\n                            <option value=\"TX\">Texas</option>\n                            <option value=\"UT\">Utah</option>\n                            <option value=\"VT\">Vermont</option>\n                            <option value=\"VA\">Virginia</option>\n                            <option value=\"WA\">Washington</option>\n                            <option value=\"WV\">West Virginia</option>\n                            <option value=\"WI\">Wisconsin</option>\n                            <option value=\"WY\">Wyoming</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group col-md-2\">\n                        <label htmlFor=\"inputZip\">Zip</label>\n                        <input type=\"text\" name=\"zip\" className=\"form-control\" id=\"inputZip\" placeholder=\"12345\"\n                            value={zip}\n                            onChange={(event) => setZip(event.target.value)}></input>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputPhoneNumber\">Phone Number</label>\n                        <input type=\"text\" name=\"phone\" className=\"form-control\" id=\"inputPhoneNumber\" placeholder=\"123-456-7890\"\n                            value={phone}\n                            onChange={(event) => setPhone(event.target.value)}></input>\n                    </div>\n                </div>\n\n                <button onClick={handleSubmit} className=\"btn btn-primary shadow\">Submit!</button>\n\n            </form>\n\n            <ToastContainer />\n        </div>\n    )\n}\n\nexport default Signup;","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/LoginForm/index.js",[],["170","171"],"/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/VolunteerHistory/index.js",["172"],"import React, { useState, useEffect } from 'react';\nimport API from '../../utils/API';\n\nfunction VolunteerHistory(props) {\n\n  const [times, setTimes] = useState([]);\n  const [volunteerTotal, setVolunteerTotal] = useState([]);\n\n  // When component mounts, load volunteer times from db\n  useEffect(() => {\n    loadTimes()\n  }, []);\n\n  function loadTimes() {\n    API.getTimes()\n      .then(res => {\n        setTimes(res.data)\n        calculateTotal(res.data)\n        // console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  };\n\n  function calculateTotal(volunteerHours) {\n    let finalValue =\n      volunteerHours.reduce((value, element) => {\n        return value + element.value;\n      }, 0)\n    setVolunteerTotal(finalValue)\n    // console.log(finalValue)\n  }\n\n  // {time._id}\n  // {time.name}\n  // {time.value}\n  // {time.date}\n\n  return (\n    <div>\n      <table className=\"table\" id=\"volhistable\">\n        <thead>\n          <tr >\n            <th scope=\"col\"><b>Organization</b></th>\n            <th scope=\"col\"><b>Hours</b></th>\n            <th scope=\"col\"><b>Date</b></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            times.map((time) => {\n              return (\n                <tr key={time._id}>\n                  <td>{time.name}</td>\n                  <td>{time.value}</td>\n                  <td>{time.date}</td>\n                </tr>\n              )\n            })\n          }\n          <tr className=\"total\" id=\"volhisttotal\">\n            <th><b>Total Hours</b></th>\n            <th><b>{volunteerTotal}</b></th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default VolunteerHistory;\n","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/DonationHistory/index.js",["173"],"import React, { useState, useEffect } from 'react';\nimport API from '../../utils/API';\n\nfunction DonationHistory(props) {\n\n  const [transactions, setTransactions] = useState([]);\n  const [donationTotal, setDonationTotal] = useState([]);\n\n  // When component mounts, load donation transactions from db\n  useEffect(() => {\n    loadTransactions()\n  }, []);\n\n  function loadTransactions() {\n    API.getTransactions()\n      .then(res => {\n        setTransactions(res.data)\n        calculateTotal(res.data)\n        // console.log(res.data)\n      })\n      .catch(err => console.log(err));\n  };\n\n    // Use reduce method to retrieve sum of donation values\n  function calculateTotal(donations) {\n    let finalValue =\n      donations.reduce((value, element) => {\n        return value + element.value;\n      }, 0)\n    setDonationTotal(finalValue)\n    // console.log(finalValue)\n  }\n\n  // {transaction._id}\n  // {transaction.name}\n  // {transaction.value}\n  // {transaction.date}\n\n  return (\n    <div>\n      <table className=\"table\" id=\"donhistable\">\n        <thead>\n          <tr >\n            <th scope=\"col\"><b>Organization</b></th>\n            <th scope=\"col\"><b>Amount</b></th>\n            <th scope=\"col\"><b>Date</b></th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            transactions.map((transaction) => {\n              return (\n                <tr key={transaction._id}>\n                  <td>{transaction.name}</td>\n                  <td>{transaction.value}</td>\n                  <td>{transaction.date}</td>\n                </tr>\n              )\n            })\n          }\n          <tr className=\"total\" id=\"donhistotal\">\n            <th><b>Total Donations</b></th>\n            <th><b>{donationTotal}</b></th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default DonationHistory;\n","/Users/DocHavok/Google Drive/Bootcamp/Project3/donateMiami/client/src/components/FavoritesTable/index.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":26,"column":7,"nodeType":"180","endLine":26,"endColumn":9,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":1,"nodeType":"184","endLine":51,"endColumn":3},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":12,"column":12,"nodeType":"187","messageId":"188","endLine":12,"endColumn":17},{"ruleId":"185","severity":1,"message":"190","line":12,"column":19,"nodeType":"187","messageId":"188","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"191","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":7,"column":62,"nodeType":"194","endLine":7,"endColumn":80},{"ruleId":"192","severity":1,"message":"193","line":8,"column":64,"nodeType":"194","endLine":8,"endColumn":81},{"ruleId":"195","severity":1,"message":"196","line":21,"column":17,"nodeType":"197","endLine":21,"endColumn":147},{"ruleId":"198","severity":1,"message":"199","line":21,"column":195,"nodeType":"194","endLine":21,"endColumn":210},{"ruleId":"195","severity":1,"message":"196","line":26,"column":17,"nodeType":"197","endLine":26,"endColumn":147},{"ruleId":"198","severity":1,"message":"199","line":26,"column":196,"nodeType":"194","endLine":26,"endColumn":211},{"ruleId":"195","severity":1,"message":"196","line":31,"column":17,"nodeType":"197","endLine":31,"endColumn":147},{"ruleId":"198","severity":1,"message":"199","line":31,"column":195,"nodeType":"194","endLine":31,"endColumn":210},{"ruleId":"178","severity":1,"message":"200","line":19,"column":8,"nodeType":"180","endLine":19,"endColumn":10,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":56,"column":47,"nodeType":"204","messageId":"205","endLine":56,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":99,"column":81,"nodeType":"204","messageId":"205","endLine":99,"endColumn":83},{"ruleId":"178","severity":1,"message":"206","line":32,"column":6,"nodeType":"180","endLine":32,"endColumn":30,"suggestions":"207"},{"ruleId":"178","severity":1,"message":"200","line":23,"column":8,"nodeType":"180","endLine":23,"endColumn":10,"suggestions":"208"},{"ruleId":"202","severity":1,"message":"203","line":60,"column":47,"nodeType":"204","messageId":"205","endLine":60,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":104,"column":81,"nodeType":"204","messageId":"205","endLine":104,"endColumn":83},{"ruleId":"185","severity":1,"message":"209","line":4,"column":26,"nodeType":"187","messageId":"188","endLine":4,"endColumn":31},{"ruleId":"174","replacedBy":"210"},{"ruleId":"176","replacedBy":"211"},{"ruleId":"178","severity":1,"message":"212","line":12,"column":6,"nodeType":"180","endLine":12,"endColumn":8,"suggestions":"213"},{"ruleId":"178","severity":1,"message":"214","line":12,"column":6,"nodeType":"180","endLine":12,"endColumn":8,"suggestions":"215"},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["218"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Footer' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has a missing dependency: 'loadNonProfits'. Either include it or remove the dependency array.",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'originalNonProfits'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNonProfits' needs the current value of 'originalNonProfits'.",["220"],["221"],"'toast' is defined but never used.",["216"],["217"],"React Hook useEffect has a missing dependency: 'loadTimes'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'loadTransactions'. Either include it or remove the dependency array.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [loadNonProfits]",{"range":"237","text":"238"},"Update the dependencies array to be: [originalNonProfits, props.selectedCategory]",{"range":"239","text":"240"},{"range":"241","text":"238"},"Update the dependencies array to be: [loadTimes]",{"range":"242","text":"243"},"Update the dependencies array to be: [loadTransactions]",{"range":"244","text":"245"},[733,735],"[dispatch]",[645,647],"[loadNonProfits]",[938,962],"[originalNonProfits, props.selectedCategory]",[768,770],[325,327],"[loadTimes]",[349,351],"[loadTransactions]"]